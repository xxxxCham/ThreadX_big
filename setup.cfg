# ThreadX - Configuration des Outils d'Audit et Qualité
# ========================================================

[tool:pytest]
# Configuration pytest pour tests de qualité
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts =
    -v
    --tb=short
    --strict-markers
    --cov=src/threadx
    --cov-report=html
    --cov-report=term-missing
    --cov-branch
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    audit: marks tests for audit validation

[coverage:run]
# Configuration de couverture
source = src/threadx
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */site-packages/*
    */conftest.py

[coverage:report]
# Rapport de couverture
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

[mypy]
# Configuration mypy pour vérification de types
python_version = 3.12
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = True
disallow_untyped_decorators = False
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

# Modules externes sans stubs
[mypy-cupy.*]
ignore_missing_imports = True

[mypy-plotly.*]
ignore_missing_imports = True

[mypy-dash.*]
ignore_missing_imports = True

[mypy-streamlit.*]
ignore_missing_imports = True

[mypy-binance.*]
ignore_missing_imports = True

[flake8]
# Configuration flake8
max-line-length = 120
max-complexity = 10
exclude =
    .git,
    __pycache__,
    .pytest_cache,
    .mypy_cache,
    build,
    dist,
    *.egg-info,
    .venv,
    venv
ignore =
    E203,  # whitespace before ':'
    E501,  # line too long (handled by black)
    W503,  # line break before binary operator
    E402,  # module level import not at top
per-file-ignores =
    __init__.py:F401,F403
    conftest.py:E402

[pylint]
# Configuration pylint
[pylint.master]
jobs = 0
suggestion-mode = yes
unsafe-load-any-extension = no

[pylint.messages_control]
disable =
    C0111,  # missing-docstring
    C0103,  # invalid-name
    R0903,  # too-few-public-methods
    R0913,  # too-many-arguments
    W0212,  # protected-access
    C0330,  # bad-continuation
    C0326,  # bad-whitespace

[pylint.format]
max-line-length = 120
indent-string = '    '

[pylint.design]
max-args = 8
max-attributes = 15
max-bool-expr = 5
max-branches = 15
max-locals = 20
max-parents = 7
max-public-methods = 25
max-returns = 6
max-statements = 60
min-public-methods = 1

[pylint.similarities]
ignore-comments = yes
ignore-docstrings = yes
ignore-imports = yes
min-similarity-lines = 5

[bandit]
# Configuration bandit pour sécurité
exclude_dirs =
    /tests/,
    /test_/,
    /.venv/,
    /venv/
skips = B101,B601

[isort]
# Configuration isort pour tri des imports
profile = black
line_length = 120
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
skip_glob =
    */migrations/*
    */__pycache__/*
    */build/*
    */dist/*

[black]
# Configuration black pour formatage
line-length = 120
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[radon]
# Configuration radon pour complexité
cc_min = C
mi_min = A
